/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 Shop.gltf
*/

import React, { useEffect, useRef, useState } from 'react'
import { Html, useGLTF } from '@react-three/drei'
import { useFrame, useThree } from '@react-three/fiber'
import { gsap } from 'gsap';

export function Shop(props) {
  const { nodes, materials } = useGLTF('/GLTFs/Shop.gltf')
  const {shopVisible, setShopVisible} = props
  const {scene} =useThree();
  const shopRef = useRef();
  useFrame(({mouse}) => {
    props.orbitRef.current.setAzimuthalAngle(1.7+0.1*mouse.x)
    props.orbitRef.current.setPolarAngle(1.4+ 0.1*mouse.y)
  })


  useEffect(() => {
    if(shopVisible) Add();
    else Remove();
  }, [shopVisible])

  const Remove = () => {
    shopRef?.current?.traverse(child => {
      if(child.isMesh) {
        gsap.to(child.material, {
          transparent: true,
          opacity: 0,
          duration: 2,
          onComplete: () => {
            scene.remove(shopRef.current)
          }
        })
      }
    })
  }

  const Add = () => {
    shopRef?.current?.traverse(child => {
      if(child.isMesh) {
        scene.add(shopRef.current)
        gsap.to(child.material, {
          transparent: false,
          opacity: 1,
          duration: 2,
        })
      }
    })
  }

  return (
    <group {...props} ref={shopRef} dispose={null}>
      <group position={[0, 0.467, 0]} scale={[25.65, 0.872, 25.65]}>
        <mesh geometry={nodes.Cube_1.geometry} material={materials.Concrete} />
        <mesh geometry={nodes.Cube_2.geometry} material={materials['Brick Stone']} />
        <mesh geometry={nodes.Cube_3.geometry} material={materials['Dark Plank']} />
      </group>
      <mesh geometry={nodes.Plank.geometry} material={materials['Dark Plank']} position={[2.141, 5.24, -23.047]} rotation={[-0.093, 0, 0]} scale={[3.227, 0.239, 0.044]} />
      <mesh geometry={nodes.Plank001.geometry} material={materials['Dark Plank']} position={[2.141, 2.845, -22.256]} rotation={[1.712, 0, 0]} scale={[3.227, 0.239, 0.044]} />
      <mesh geometry={nodes.Plank002.geometry} material={materials['Dark Plank']} position={[2.141, 2.517, -20.491]} rotation={[2.211, 0, 0]} scale={[3.227, 0.239, 0.044]} />
      <mesh geometry={nodes.Plank003.geometry} material={materials['Dark Plank']} position={[2.141, 2.182, -20.28]} rotation={[2.943, 0, 0]} scale={[3.227, 0.239, 0.044]} />
      <mesh geometry={nodes.Legs.geometry} material={materials.Metal} position={[5.367, 5.201, -23.12]} rotation={[-0.093, 0, 0]} scale={[0.129, 0.239, 0.044]} />
      <mesh geometry={nodes.Plank016.geometry} material={materials['Dark Plank']} position={[3.431, 5.24, 22.395]} rotation={[-3.048, 0, -Math.PI]} scale={[3.227, 0.239, 0.044]} />
      <mesh geometry={nodes.Plank017.geometry} material={materials['Dark Plank']} position={[3.431, 2.845, 21.605]} rotation={[1.43, 0, Math.PI]} scale={[3.227, 0.239, 0.044]} />
      <mesh geometry={nodes.Plank018.geometry} material={materials['Dark Plank']} position={[3.431, 2.517, 19.84]} rotation={[0.93, 0, Math.PI]} scale={[3.227, 0.239, 0.044]} />
      <mesh geometry={nodes.Plank019.geometry} material={materials['Dark Plank']} position={[3.431, 2.182, 19.629]} rotation={[0.199, 0, Math.PI]} scale={[3.227, 0.239, 0.044]} />
      <mesh geometry={nodes.Legs001.geometry} material={materials.Metal} position={[0.205, 5.201, 22.469]} rotation={[-3.048, 0, -Math.PI]} scale={[0.129, 0.239, 0.044]} />
      <mesh geometry={nodes.Plank004.geometry} material={materials['Light Plank']} position={[8.427, 2.146, -19.948]} rotation={[Math.PI / 2, 0, 0]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank005.geometry} material={materials['Light Plank']} position={[8.427, 2.701, -19.948]} rotation={[Math.PI / 2, 0, 0]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank006.geometry} material={materials['Light Plank']} position={[8.284, 2.764, -19.972]} rotation={[Math.PI / 2, 0, 0]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank007.geometry} material={materials['Light Plank']} position={[7.23, 2.146, -21.165]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank008.geometry} material={materials['Light Plank']} position={[7.23, 2.701, -21.165]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank009.geometry} material={materials['Light Plank']} position={[7.254, 2.764, -21.308]} rotation={[Math.PI / 2, 0, Math.PI / 2]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank010.geometry} material={materials['Light Plank']} position={[8.429, 2.146, -22.349]} rotation={[Math.PI / 2, 0, Math.PI]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank011.geometry} material={materials['Light Plank']} position={[8.429, 2.701, -22.349]} rotation={[Math.PI / 2, 0, Math.PI]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank012.geometry} material={materials['Light Plank']} position={[8.572, 2.764, -22.325]} rotation={[Math.PI / 2, 0, Math.PI]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank013.geometry} material={materials['Light Plank']} position={[9.629, 2.146, -21.134]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank014.geometry} material={materials['Light Plank']} position={[9.629, 2.701, -21.134]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Plank015.geometry} material={materials['Light Plank']} position={[9.605, 2.764, -20.991]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} scale={[1, 1, 0.224]} />
      <mesh geometry={nodes.Dirt.geometry} material={materials.Dirt} position={[8.451, 2.341, -21.153]} scale={[0.998, 0.607, 0.998]} />
      <mesh geometry={nodes.Base001.geometry} material={materials.Concrete} position={[0, 1.422, 0]} scale={[16.34, 9.223, 16.34]} />
      <group position={[14.674, 9.158, -14.679]} scale={[1.664, 6.979, 1.664]}>
        <mesh geometry={nodes.Cube015.geometry} material={materials['Green Paint']} />
        <mesh geometry={nodes.Cube015_1.geometry} material={materials['White Marble']} />
      </group>
      <group position={[-0.041, 9.209, 13.5]} scale={[12.922, 6.888, 1.142]}>
        <mesh geometry={nodes.Cube021.geometry} material={materials['Brick Brown']} />
        <mesh geometry={nodes.Cube021_1.geometry} material={materials['White Brick']} />
      </group>
      <group position={[-13.341, 9.209, 0.02]} rotation={[0, Math.PI / 2, 0]} scale={[12.922, 6.888, 1.142]}>
        <mesh geometry={nodes.Cube022.geometry} material={materials['Brick Brown']} />
        <mesh geometry={nodes.Cube022_1.geometry} material={materials['White Brick']} />
      </group>
      <group position={[0.018, 9.209, -13.303]} rotation={[Math.PI, 0, Math.PI]} scale={[12.922, 6.888, 1.142]}>
        <mesh geometry={nodes.Cube024.geometry} material={materials['Brick Brown']} />
        <mesh geometry={nodes.Cube024_1.geometry} material={materials['White Brick']} />
      </group>
      <mesh geometry={nodes.small_wooden_table_01.geometry} material={materials.small_wooden_table_01} position={[10.184, 2.38, 4.713]} rotation={[0, Math.PI / 2, 0]} scale={[13.825, 6.828, 9.955]} />
      <group position={[13.438, 2.217, -7.408]} rotation={[Math.PI / 2, 0, 0]} scale={0}>
        <mesh geometry={nodes.Door_Oktagon_N060522_1.geometry} material={materials.Steel} />
        <mesh geometry={nodes.Door_Oktagon_N060522_2.geometry} material={materials.Wood} />
        <mesh geometry={nodes.Door_Oktagon_N060522_3.geometry} material={materials.Glass} />
        <mesh geometry={nodes.Door_Oktagon_N060522_4.geometry} material={materials.Glass} />
      </group>
      <mesh geometry={nodes.Front_Wall.geometry} material={materials['Green Paint']} position={[13.553, 4.042, 4.776]} rotation={[0, 0, -Math.PI / 2]} scale={[1, 1, 2.989]} />
      <mesh geometry={nodes.Front_Wall001.geometry} material={materials['Brick Brown']} position={[12.562, 9.416, -6.436]} rotation={[0, 0, -Math.PI / 2]} scale={[6.876, 6.471, 6.471]} />
      <mesh geometry={nodes.Text.geometry} material={materials['White Paint']} position={[13.49, 14.404, 4.776]} rotation={[Math.PI / 2, 0, -Math.PI / 2]} />
      <mesh geometry={nodes.Cube001.geometry} material={materials['Light Green ']} position={[14.937, 14.15, -7.369]} rotation={[0, 0, -Math.PI / 2]} />
      <group position={[12.574, 9.267, 4.776]} rotation={[0, 0, -Math.PI / 2]} scale={[3.146, 7.957, 6.535]}>
        <mesh geometry={nodes.Plane004.geometry} material={materials['Black Paint']} />
        <mesh geometry={nodes.Plane004_1.geometry} material={materials.Glass} />
      </group>
      <mesh geometry={nodes.Ceiling.geometry} material={materials.Concrete} position={[0, 17.35, 0]} scale={[10.754, 6.07, 10.754]} />
      <group position={[0, 18.116, 0]} scale={[5.576, 0.216, 9.176]}>
        <mesh geometry={nodes.Cube016.geometry} material={materials['White Paint']} />
        <mesh geometry={nodes.Cube016_1.geometry} material={materials.Glass} />
      </group>
      <group position={[0.305, 22.008, 0]} scale={[0.103, 0.103, 1.875]}>
        <mesh geometry={nodes.Cube019.geometry} material={materials['White Paint']} />
        <mesh geometry={nodes.Cube019_1.geometry} material={materials.Glass} />
      </group>
      <mesh geometry={nodes.Cylinder.geometry} material={materials.Metal} position={[8.358, 18.452, -9.485]} scale={0.567} />
      <mesh geometry={nodes.Base.geometry} material={materials.Metal} position={[19.882, 1.826, 19.393]} scale={[1, 0.494, 1]} />
      <mesh geometry={nodes.Top.geometry} material={materials.Metal} position={[19.882, 12.12, 19.393]} scale={[0.312, 0.524, 0.312]} />
      <mesh geometry={nodes.Head.geometry} material={materials.Metal} position={[19.882, 11.64, 19.905]} />
      <mesh geometry={nodes.Base002.geometry} material={materials.Metal} position={[19.882, 1.826, -18.244]} scale={[1, 0.494, 1]} />
      <mesh geometry={nodes.Top001.geometry} material={materials.Metal} position={[19.882, 12.12, -18.244]} scale={[0.312, 0.524, 0.312]} />
      <mesh geometry={nodes.Head001.geometry} material={materials.Metal} position={[19.882, 11.64, -17.733]} />
    </group>
  )
}

useGLTF.preload('/Shop.gltf')
